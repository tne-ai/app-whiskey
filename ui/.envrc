#!/usr/bin/env bash
# Added by install-asdf.sh on Thu Sep 30 23:25:03 CEST 2021
use asdf

source_up_if_exists
dotenv_if_exists

# # https://unix.stackexchange.com/questions/575481/how-can-i-find-the-ancestor-directory-with-a-given-name
pwd="$PWD" && export WS_DIR="${pwd%git"${pwd#*git}"}"
if [[ ! $WS_DIR =~ ws ]]; then
	WS_DIR="$(find . -maxdepth 1 -name "ws*" -exec realpath {} \; | sort | head -n 1)"
fi

# from https://github.com/direnv/direnv/blob/master/man/direnv-stdlib.1.md
layout go
layout node
# Only create a python venv is python is locally installed with asdf cmd direnv set _python _version_
if [[ -r .tool-versions ]] && grep "^python" .tool-versions; then
	layout uv
fi

# Added by install-1password.sh on Mon Sep  2 14:45:33 PDT 2024
[[ -v AWS_ACCESS_KEY_ID ]] || export "AWS_ACCESS_KEY_ID"="$(op item get "AWS Access Key" --fields "access key id" --reveal)"
[[ -v AWS_SECRET_ACCESS_KEY ]] || export "AWS_SECRET_ACCESS_KEY"="$(op item get "AWS Access Key" --fields "secret access key" --reveal)"
# [[ -v DIGITALOCEAN_ACCESS_TOKEN ]] || export "DIGITALOCEAN_ACCESS_TOKEN"="$(op item get "DigitalOcean Personal Access Token" --fields "token" --reveal)"
# [[ -v GITHUB_TOKEN ]] || export "GITHUB_TOKEN"="$(op item get "GitHub Personal Access Token Dev" --fields "personal access token" --reveal)"
# # needed for ghcr.io docker pulls
#[[ -v GITHUB_TOKEN_CLASSIC ]] || export "GITHUB_TOKEN_CLASSIC"="$(op item get "GitHub Personal Access Token Classic" --fields "personal access token" --reveal)"
# [[ -v LOCALSTACK_API_KEY ]] || export "LOCALSTACK_API_KEY"="$(op item get "LocalStack API Key" --fields "api key" --reveal)"
[[ -v ANTHROPIC_API_KEY ]] || export "ANTHROPIC_API_KEY"="$(op item get "Anthropic API Key Dev" --fields "api key" --reveal)"
[[ -v GEMINI_API_KEY ]] || export "GEMINI_API_KEY"="$(op item get "Google Gemini API Key Dev" --fields "api key" --reveal)"
[[ -v GROQ_API_KEY ]] || export "GROQ_API_KEY"="$(op item get "Groq API Key Dev" --fields "api key" --reveal)"
[[ -v HF_TOKEN ]] || export "HF_TOKEN"="$(op item get "Hugging Face API Token Dev" --fields "user access token" --reveal)"
[[ -v OPENAI_API_KEY ]] || export "OPENAI_API_KEY"="$(op item get "OpenAI API Key Dev" --fields "api key" --reveal)"
[[ -v OPENROUTER_API_KEY ]] || export "OPENROUTER_API_KEY"="$(op item get "OpenRouter API Key Dev" --fields "key" --reveal)"
[[ -v REPLICATE_API_KEY ]] || export "REPLICATE_API_KEY"="$(op item get "Replicate API Token Dev" --fields "api token" --reveal)"
#[[ -v SLASH_GPT_ENV_WEBPILOT_UID ]] || export "SLASH_GPT_ENV_WEBPILOT_UID"="$(op item get "Webpilot UID Dev" --fields "key" --reveal)"
# [[ -v SUPERSET_SECRET_KEY ]] || export "SUPERSET_SECRET_KEY"="$(op item get "Apache Superset Secret Key Dev" --fields "api key" --reveal)"
# needed for open webui or else it will write a file.
[[ -v WEBUI_SECRET_KEY ]] || export "WEBUI_SECRET_KEY"="$(op item get "Open WebUI Secret Key Dev" --fields "secret key" --reveal)"
[[ -v DEEPSEEK_API_KEY ]] || export "DEEPSEEK_API_KEY"="$(op item get "deepseek API Key Dev" --fields "api key" --reveal)"

# Added by install-ollama.sh on Thu Jan  2 11:24:08 PST 2025
[[ -v OLLAMA_KV_CACHE_TYPE ]] || export OLLAMA_KV_CACHE_TYPE=q4_0
[[ -v OLLAMA_FLASH_ATTENTION ]] || export OLLAMA_FLASH_ATTENTION=1

# Added by install-ai.sh Jan 23 2025 by richt
[[ -v GOOGLE_DRIVE_API_KEY ]] || export "GOOGLE_DRIVE_API_KEY"="$(op item get "Google Drive and Picker API Key Dev" --fields "api key" --reveal)"
[[ -v GOOGLE_DRIVE_CLIENT_ID ]] || export "GOOGLE_DRIVE_CLIENT_ID"="$(op item get "Google OAuth Client ID Dev" --fields "client id" --reveal)"
[[ -v VITE_AWS_KEY ]] || export VITE_AWS_KEY="$AWS_ACCESS_KEY_ID"
[[ -v VITE_AWS_SECRET ]] || export VITE_AWS_SECRET="$AWS_SECRET_ACCESS_KEY"
[[ -v VITE_OPEN_API_KEY ]] || export VITE_OPEN_API_KEY="$OPENAI_API_KEY"
[[ -v DATA_DIR ]] || export DATA_DIR="$WS_DIR/data/open-webui/data"
[[ -v MODEL_API_KEY ]] || export "MODEL_API_KEY"="$(op item get "Open WebUI Local API Key" --fields "api key" --reveal)"
